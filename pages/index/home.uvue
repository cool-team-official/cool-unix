<template>
	<cl-page>
		<cl-topbar fixed :show-back="false" safe-area-top :height="isMp() ? null : 100">
			<view
				class="flex flex-row items-center p-3 flex-1 w-full"
				:class="{
					'pt-0': isMp()
				}"
			>
				<view class="bg-primary-500 rounded-lg p-[5rpx]">
					<cl-image
						src="/static/logo.png"
						:width="45"
						:height="45"
						:show-loading="false"
					></cl-image>
				</view>

				<cl-text
					color="primary"
					:pt="{
						className: parseClass([
							'!text-xl mr-auto ml-2 flex-1',
							[isDark, '!text-white', '!text-black']
						])
					}"
				>
					{{ config.name }}
				</cl-text>

				<view
					class="bg-surface-500 h-8 w-8 rounded-full flex flex-row items-center justify-center mr-3"
					@tap="setSize"
				>
					<cl-icon name="font-size" color="white"></cl-icon>
				</view>

				<view
					class="bg-primary-500 h-8 w-8 rounded-full flex flex-row items-center justify-center"
					:class="{
						'mr-24': isMp()
					}"
					@tap="setLocale"
				>
					<cl-icon name="translate" color="white"></cl-icon>
				</view>
			</view>
		</cl-topbar>
		<view
			class="shadow-sm mt-5 bg-white dark:!bg-surface-800 rounded-xl p-5 mx-2"
			:class="{ 'is-dark': isDark }"
		>
			<view class="flex flex-row justify-between item-center">
				<view class="flex flex-row">
					<cl-skeleton :loading="homeUser == null" type="circle">
						<cl-avatar
							:src="`data:image/png;base64,${homeUser?.avatar}`"
							rounded
						></cl-avatar>
					</cl-skeleton>
					<view class="ml-5">
						<cl-skeleton :loading="homeUser == null" type="text">
							<cl-text
								:pt="{
									className: parseClass([
										'font-bold',
										[isDark, '!text-white', '!text-black']
									])
								}"
								>{{ homeUser?.name }}</cl-text
							>
						</cl-skeleton>
						<cl-skeleton
							:loading="homeUser == null"
							:class="{ 'mt-2': homeUser == null }"
							type="text"
						>
							<cl-text
								:pt="{
									className: parseClass([
										'text-xs mt-1',
										[isDark, '!text-white-600', '!text-surface-600']
									])
								}"
								>{{ t("状态") }}:<cl-text
									:pt="{
										className: parseClass([
											'text-xs ml-1',
											[isDark, '!text-white-600', '!text-surface-600']
										])
									}"
									>{{ homeUser?.status }}</cl-text
								>
							</cl-text>
						</cl-skeleton>
					</view>
				</view>
				<view class="flex flex-row item-center py-1">
					<cl-button
						rounded
						disabled
						color="primary"
						:pt="{
							className: '!bg-primary-100'
						}"
						><cl-text
							:pt="{
								className: 'text-xs !text-primary-500 flex flex-row item-center'
							}"
							>{{ homeUser?.level }} miner</cl-text
						>
					</cl-button>
				</view>
			</view>
			<view class="flex flex-row mt-5">
				<view class="flex flex-1 flex-cloumn items-center">
					<cl-icon name="verified-badge-line" :size="40"></cl-icon>
					<cl-text class="font-bold mt-1">{{ homeUser?.hashRate }} TH/s</cl-text>
					<cl-text
						:pt="{
							className: parseClass([
								'text-xs ml-1',
								[isDark, '!text-white-600', '!text-surface-600']
							])
						}"
						>{{ t("哈希率") }}</cl-text
					>
				</view>
				<view class="flex flex-1 flex-cloumn items-center">
					<cl-icon name="medal-line" :size="40"></cl-icon>
					<cl-text class="font-bold mt-1">T {{ homeUser?.earnings }}</cl-text>
					<cl-text
						:pt="{
							className: parseClass([
								'text-xs ml-1',
								[isDark, '!text-white-600', '!text-surface-600']
							])
						}"
						>{{ t("收益") }}</cl-text
					>
				</view>
				<view class="flex flex-1 flex-cloumn items-center">
					<cl-icon name="at-fill" :size="40"></cl-icon>
					<cl-text class="font-bold mt-1"
						>{{ homeUser?.minerCount }} {{ t("单位") }}</cl-text
					>
					<cl-text
						:pt="{
							className: parseClass([
								'text-xs ml-1',
								[isDark, '!text-white-600', '!text-surface-600']
							])
						}"
						>{{ t("矿工数量") }}</cl-text
					>
				</view>
			</view>
			<view class="mt-5 bg-primary-200 rounded-xl p-3">
				<view class="flex flex-row justify-between items-center">
					<cl-text
						:pt="{
							className: parseClass([
								'text-md',
								[isDark, '!text-surface-900', '!text-surface-600']
							])
						}"
						>{{ t("可用代币") }}</cl-text
					>
					<view class="flex flex-row items-center">
						<cl-icon
							color="primary"
							class="mr-1 my-auto"
							name="verified-badge-line"
							:size="35"
						></cl-icon>
						<cl-text class="font-bold !text-primary-500"
							>{{ homeUser?.tokens }}
						</cl-text>
						<cl-text class="font-bold !text-primary-500">MTC</cl-text>
					</view>
				</view>
				<view class="flex flex-row justify-between mt-5">
					<cl-button
						icon="add-circle-line"
						@tap="toDeposit()"
						class="!px-10 !py-3 flex-1"
						>{{ t("充值") }}</cl-button
					>
					<cl-button
						icon="arrow-right-up-line"
						@tap="toWithdraw()"
						:pt="{
							className: '!px-10 !py-3 flex-1'
						}"
						>{{ t("提现") }}</cl-button
					>
				</view>
			</view>
		</view>
		<view class="relative mx-2 mt-5 h-[300rpx]">
			<view
				class="absolute left-0 top-0 shadow-sm bg-white dark:!bg-surface-800 rounded-xl p-5"
				:class="{ 'is-dark': isDark }"
			>
				<Asserts></Asserts>
			</view>
			<view
				class="absolute right-0 top-0 w-[400rpx] h-[300rpx] box-border shadow-sm bg-white dark:!bg-surface-800 rounded-xl p-5"
				:class="{ 'is-dark': isDark }"
			>
				<Mining></Mining>
			</view>
		</view>
		<view
			class="mx-2 mt-5 h-[400rpx] bg-white dark:!bg-surface-800 rounded-xl p-5"
			:class="{ 'is-dark': isDark }"
		>
			<TopCoins></TopCoins>
		</view>
		<view
			class="mx-2 my-5 h-[400rpx] bg-white dark:!bg-surface-800 rounded-xl p-5"
			:class="{ 'is-dark': isDark }"
		>
			<WeeklyRevence></WeeklyRevence>
		</view>
		<!-- 自定义底部导航栏 -->
		<custom-tabbar></custom-tabbar>

		<!-- 主题设置 -->
		<locale-set :ref="refs.set('localeSet')"></locale-set>

		<!-- 字体大小设置 -->
		<size-set :ref="refs.set('sizeSet')"></size-set>
	</cl-page>
</template>

<script setup lang="ts">
import { isDark, parseClass, isMp, useRefs, useStore, request, router } from "@/cool";
import { t } from "@/locale";
import { config } from "@/config";
import LocaleSet from "@/components/locale-set.uvue";
import SizeSet from "@/components/size-set.uvue";
import { useUi } from "@/uni_modules/cool-ui";
import CustomTabbar from "@/components/tabbar.uvue";
import Asserts from "@/pages/home/assets.uvue";
import Mining from "@/pages/home/mining.uvue";
import TopCoins from "@/pages/home/topcoins.uvue";
import WeeklyRevence from "@/pages/home/weeklyrevence.uvue";
import { type HomeUserInfo } from "@/types";
import { ref } from "vue";

const refs = useRefs();
const ui = useUi();
const { user } = useStore();

const homeUser = ref<HomeUserInfo | null>(null);

function toWithdraw() {
	router.push({ path: "/pages/withdraw/index" });
}

function toDeposit() {
	router.push({ path: "/pages/deposit/index" });
}

onReady(() => {
	// 根据实际情况调整数据的类型
	if (user.isNull()) {
		ui.showToast({
			message: t("身份已过期，请重新登录!")
		});
		user.logout();
	} else {
		ui.showLoading(t("加载中"));
		request({
			url: "/mara/asap/userinfo"
		})
			.then((res) => {
				if (res != null) {
					homeUser.value = res as HomeUserInfo;
				}
			})
			.finally(() => {
				ui.hideLoading();
			});
	}
});

function setLocale() {
	refs.open("localeSet");
}

function setSize() {
	refs.open("sizeSet");
}
</script>

<style lang="scss" scoped></style>
